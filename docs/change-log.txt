<<<<<<< HEAD
Changes in 0.8.0:

- Supports bdp-common 0,0.6 which provides all logging and monitoring deps
- Instruments log4j2 with io.dropwizard.metrics
- Adds a new API 
=======
Changes in 0.7.13

- Added kafkaOffset argument to FastBoomWriter.writeLine()
- Added a lastKafkaOffset to FastBoomWriter
- FastBoomWriter now keeps track of lastKafkaOffset and lastMessageTimestamp
- Changed the periodicCloseExpiredPoll in TimeBasedHdfsOutputPath to store the expired boom file's lastKafakaOffset and lastMessageTimestamp instead of the worker's current values
- Added a new global configuration property max.open.boom.files.per.partition (default: 5)  to limit the number of open boom files per partition
- Modified TimeBasedHdfsOutputPath to close off the oldest FastBoomWriter when the number of open boom files is greater than max.open.boom.files.per.partition, and update zookeeper with lastKafakaOffset and lastMessageTimestamp

Changes in 0.7.12 HF4

- ReadFlagWriter now doesn't check for the existence of the data directory when it's writing flags

Changes in 0.7.12. HF3

- New configuration option boom.file.expired.grace.time.ms (default: 30 * 1000, thirty seconds): The time after a TimeBasedHdfsOutputPath output file expires before it's closed via the periodic file close interval triggered upon each message consumed from Kafka.  This option is introduced to make the previously hard coded value configurable and uses the same default value as the previous hard coded value.
- New configuration option forced.zk.offsetTimestamp.update.time.ms (default: 10 * 60 * 1000, ten minutes): Ensure that very quiet partitions are updating their offset timestamp in ZK even when they are not receiving any messages.  If the last received message was during the previous hour and it's been more than this amount of  milliseconds then write the start of the hour's timestamp into ZK for the partition (providing it hasn't already been stored for the current hour already).
- New configuration option kaboom.server.sleep.duration.ms (default: 10 000, ten seconds): Exposes a configuration option for a previously hard coded property value with the same default value.  This is the time waited after a worker processes it's work assignments before it fetches another update from ZK and processes again.
- Fixes the NullPointerException caused by improper handling of the NoNodeException that very rarely occurs when a worker fetches it's assignments.  The null assignee is now logged and ignored and skipped until the next round of worker assignments is reviewed (after the newly introduced: kaboom.server.sleep.duration.ms).
- Fixes the "hung KaBoom workers" by sending a basic ping() health check to each KaBoom worker.  The worker has until kaboom.server.sleep.duration.ms to respond with a pong before the KaBoom server will send it a kill request and send an interrupt to the worker's thread.  The worker (if it comes back to acknowledge it's been killed) will throw an exception that will get caught and trigger the abort sequence (delete files, and stop).

Changes in 0.7.12:

- Fixes bug that threw an NPE when there was no work assigned to a client and the load balancer tries to check if it's over worked

Changes in 0.7.11:

- Adds an additional kafka ready flag in the topic root
- Logs a warning if the load balancer is still running after leader.sleep.duration.ms

Changes in 0.7.10:

- Adds a new optional configuration option (String) kaboom.kafkaReady.flag.filename, default=_KAFKA_READY
>>>>>>> origin/kaboom-0.7.13

Changes in 0.7.9:

- Fixes a ReadyFlagWriter bug that would write flags to the current hour
- Adds logging around the maxTimestamps that are stored in ZK
- Depends on common-utils-dev 0.0.5 (to get the new ZK get/set utility)

Changes in 0.7.8:

- Adds a total compression ratio histogram

Changes in 0.7.7:

- Adds new optional configuration option (Short): kaboom.deflate.compression.level, default=6
- Adds new optional configuration option (Short): topic.<topic>.compression.level
- Adds new histogram metric for compression ratio 

Changes in 0.7.6:

- Resolves hostname bug in the LocalLoadBalancer

Changes in 0.7.5

- Improved ReadyFlagWriter logic: Previous versions were buggy and had too many operations included in their hourly loop instead of in the topic loop
- Removes checks on _READY flag in ReadyFlagWriter (_READY flags from LogDriver's LogMaintenance are deprecated by KaBoom 0.7.1 and later)
- Fixes bugs related to concurrent access on shared TimeBasedHdfsOutputPath objects (each worker now instantiates their own)
- Reduced INFO level log messages throughout to limit logs to more important messages
- Separates the pre-install script for DEB and RPM (as DEB's don't require the /var/run/kaboom)
- Adds new optional configuration option (Long): leader.sleep.duration.ms, default=10 * 60 * 1000
- Adds new optional configuration option (String) kaboom.load.balancer.type, default=even


Changes in 0.7.4:

- Abstracts load balancing and adds two implementation: even and local

Changes in 0.7.3:

- Adds native compression 

Changes in 0.7.2:

- Bumps Krackle dependency to 0.7.10 to have the consumer's broker socket have the keep alive flag set

Changes in 0.7.1:

- New timer metrics for HDFS flush time for topic-partition, topic, and total per server
- New meter metrics for boom writes for topic-partition, topic, and total per server
- Adds new required configuration option: hadoop.fs.uri
- Adds new required topic configuration for HDFS root directory (string): topic.<topicName>.hdfsRootDir
- Supports multiple numbered template based HDFS output paths per topic 
- Topic HDFS output paths are now configurable to be left open for specific durations
- Adds new optional configuration option (boolean): kaboom.useTempOpenFileDirectory
- Adds new optional configuration option (Integer): boom.file.buffer.size, default=16384
- Adds new optional configuration option (Short): boom.file.replicas, default=3
- Adds new optional configuration option (Long): boom.file.block.size=268435456
- Adds new optional configuration option (String): boom.file.temp.prefix, default=_tmp_
- Adds new optional configuration option (Long): boom.file.flush.interval, default=30000
- Adds new optional configuration option (Long): boom.file.close.expired.interval, default=60000


Changes in 0.7.0:

- Deprecates all CDH-specific content, configuration, and project files
- New dependency on Krackle 0.7.7 for configuring socket timeouts
- New KaboomConfiguration class that encapsulates all the configuration
- New accessor methods for instantiating CuratorFramework objects
- Project builds produce an RPM artifact 
- Fixes synchronization on non-final workersLock object (used when instantiating metrics)
- Removes unused imports
- Worker.java, int length; byte version; int pos; are no longer initialized with default values that are never used
- New method: private Map<String, String> getTopicPathsFromProps(Properties props)
- New method: private Map<String, String> getTopicProxyUsersFromProps(Properties props)
- new method: private Properties getProperties()


Changes in 0.6.10:

- Re-formats source for Kaboom and Worker class 
- Adds offset overrides feature for single partitions to be set to specific offsets in ZK
- Adds  feature and configuration property to sink to lower offsets when offsets surpass the high watermark
- Re-writes the offset handling code for when last offsets do not match expected offset
- Adds new dependency to the new com.blackberry.common.props that simplifies parsing property files and will eventually be enhanced with ZK support
	
